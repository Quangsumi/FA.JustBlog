@model FA.JustBlog.ViewModels.PostCategoryViewModel

@{
    ViewBag.Title = "Create Post";
}

<div class="col-sm-12">
    <h2>Posts</h2>
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Create Post</h3>
        </div>
        @using (Html.BeginForm("Create", "Post", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()

            <div class="box-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Post.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Post.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Post.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Post.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Post.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Post.ShortDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Post.Meta, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Post.Meta, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Post.Meta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Post.UrlSlug, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Post.UrlSlug, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Post.UrlSlug, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Post.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <label style="padding-top: 7px;">
                            @Html.EditorFor(model => model.Post.Published, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Post.Published, "", new { @class = "text-danger" })
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Post.CategoryId, htmlAttributes: new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(m => m.Post.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "Select Post")
                        @Html.ValidationMessageFor(model => model.Post.Category.Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Post.PostContent, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Post.PostContent, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Post.PostContent, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="box-footer">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                <input type="submit" value="Create" class="btn btn-info pull-right" />
            </div>
        }
    </div>
</div>